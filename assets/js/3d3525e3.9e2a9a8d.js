"use strict";(self.webpackChunkwww_cloudcarbonfootprint_org=self.webpackChunkwww_cloudcarbonfootprint_org||[]).push([[8944],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),k=o,m=p["".concat(l,".").concat(k)]||p[k]||d[k]||a;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=k;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},4374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={id:"run-with-docker",title:"Run with Docker",slug:"/run-with-docker",sidebar_position:7},i=void 0,c={unversionedId:"GettingStarted/run-with-docker",id:"GettingStarted/run-with-docker",title:"Run with Docker",description:"If you would like to run with Docker, you'll need install docker and docker-compose:",source:"@site/docs/GettingStarted/RunWithDocker.md",sourceDirName:"GettingStarted",slug:"/run-with-docker",permalink:"/docs/run-with-docker",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"run-with-docker",title:"Run with Docker",slug:"/run-with-docker",sidebar_position:7},sidebar:"defaultSidebar",previous:{title:"Running the CLI",permalink:"/docs/running-the-cli"},next:{title:"Creating a Lookup Table",permalink:"/docs/creating-a-lookup-table"}},l={},u=[{value:"Run with docker-compose",id:"run-with-docker-compose",level:3},{value:"Run the API as a Docker container",id:"run-the-api-as-a-docker-container",level:3},{value:"Run the Client as a Docker container",id:"run-the-client-as-a-docker-container",level:3}],s={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you would like to run with Docker, you'll need install docker and docker-compose:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install options for docker ",(0,o.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker/"},"here.")),(0,o.kt)("li",{parentName:"ul"},"Install options for docker-compose (if it doesn\u2019t come bundled with Docker) ",(0,o.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/install/"},"here."))),(0,o.kt)("h3",{id:"run-with-docker-compose"},"Run with docker-compose"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Make sure you have configured your ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/api/.env")," file with the environment variables you need for your cloud provider(s).")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Ensure you have cloud provider credentials files in the following locations on your filesystem:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"AWS: ",(0,o.kt)("inlineCode",{parentName:"li"},"$HOME/.aws/credentials")),(0,o.kt)("li",{parentName:"ul"},"GCP: ",(0,o.kt)("inlineCode",{parentName:"li"},"$HOME/.config/gcloud/service-account-keys.json")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Ensure you have saved your environment variables as files on your local file system. Docker compose will use these securely as ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/swarm/secrets/"},"Docker Secrets")," at run time, in the ~/.docker/secrets directory. To aid with this, we have a command you can run that does this:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"yarn create-docker-secrets\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Remove any secrets in ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," that you are not using.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run the application with docker compose:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"docker-compose up\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"You can then access the dashboard at http://localhost:80"))),(0,o.kt)("h3",{id:"run-the-api-as-a-docker-container"},"Run the API as a Docker container"),(0,o.kt)("p",null,"If you would like to only run the API as a docker container, for example to deploy this as a service for your organization, you can pull and run it with these commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker pull cloudcarbonfootprint/api\n\ndocker run \\\n    --env-file packages/api/.env \\\n    --env GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/service-account-keys.json \\\n    -p 4000:4000 \\\n    -v $HOME/.aws/credentials:/root/.aws/credentials \\\n    -v $HOME/.config/gcloud/service-account-keys.json:/root/.config/gcloud/service-account-keys.json \\\n    cloudcarbonfootprint/api\n")),(0,o.kt)("p",null,"Then you can access the API at: http://localhost:4000/api/footprint?start=2021-01-01&end=2021-02-01"),(0,o.kt)("h3",{id:"run-the-client-as-a-docker-container"},"Run the Client as a Docker container"),(0,o.kt)("p",null,"If you would like to run the client as a docker container, you can pull and run it with these commands after running API as a docker container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker pull cloudcarbonfootprint/client:latest\n\ndocker run \\\n    -p 80:80 \\\n    -v ${PWD}/docker/nginx.conf:/etc/nginx/nginx.conf \\\n    cloudcarbonfootprint/client:latest\n")),(0,o.kt)("p",null,"Then you can access the client at: http://localhost:80"))}d.isMDXComponent=!0}}]);